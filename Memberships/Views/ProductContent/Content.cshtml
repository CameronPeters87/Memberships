@model Memberships.Models.ContentViewModel

@{
    ViewBag.Title = "Content";
}

<div class="headline">
    <h2>@Model.Title</h2>
    <a class="btn btn-primary pull-right" href="/ProductContent/Index/@Model.ProductId">
        <span class="glyphicon glyphicon-arrow-left"></span>
        Back to List
    </a>
</div>

<div>@Model.Description</div>

@if (Model.HTML != null)
{
    <div class="article">@Html.Raw(Model.HTML)</div>
}

@if (Model.VideoUrl != null)
{
    <div id="player" class="video-margin">
    </div>

    <div id="player"></div>
}

@section Scripts {

    <script>
        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: 'M7lc1UVf-VE',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING && !done) {
                setTimeout(stopVideo, 6000);
                done = true;
            }
        }
        function stopVideo() {
            player.stopVideo();
        }
    </script>

}